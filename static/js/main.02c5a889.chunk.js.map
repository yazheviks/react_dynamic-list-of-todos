{"version":3,"sources":["components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["classNames","require","Todo","todo","onButtonClick","isSelectedUser","className","TodoList__item","completed","key","id","type","readOnly","title","button","onClick","userId","TodoList","state","search","filteredTodos","filter","all","active","changeHandler","event","setState","target","name","value","this","props","todos","selectedUserId","todosToShow","includes","placeholder","onChange","map","React","PureComponent","request","url","options","fetch","then","result","ok","Error","status","statusText","json","data","CurrentUser","user","updateUser","prevProps","prevState","newUserId","newUser","catch","email","phone","App","selectUser","clearSelectedUser","onInputChange","filterTodos","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02c5a889.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst classNames = require('classnames');\n\nexport const Todo = ({ todo, onButtonClick, isSelectedUser }) => (\n  <li\n    className={classNames({\n      TodoList__item: true,\n      'TodoList__item--checked': todo.completed,\n      'TodoList__item--unchecked': !todo.completed,\n    })}\n    key={todo.id}\n  >\n    <label>\n      <input type=\"checkbox\" readOnly />\n      <p>{todo.title}</p>\n    </label>\n\n    <button\n      className={classNames({\n        'TodoList__user-button': true,\n        'TodoList__user-button--selected': isSelectedUser,\n        button: true,\n      })}\n      type=\"button\"\n      onClick={() => onButtonClick(todo.userId)}\n    >\n      {`User #${todo.userId}`}\n    </button>\n  </li>\n);\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  isSelectedUser: PropTypes.bool.isRequired,\n  onButtonClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\nimport { Todo } from '../Todo';\n\nexport class TodoList extends React.PureComponent {\n  state = {\n    search: '',\n    filteredTodos: 'all',\n  }\n\n  filter = {\n    all: () => true,\n    completed: todo => todo.completed,\n    active: todo => !todo.completed,\n  }\n\n  changeHandler = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId, onButtonClick } = this.props;\n    const { search, filteredTodos } = this.state;\n    const todosToShow = todos\n      ? (todos.filter(todo => (\n        todo.title.includes(search) && this.filter[filteredTodos](todo)\n      )))\n      : null;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <div className=\"TodoList__list-container\">\n          <input\n            name=\"search\"\n            placeholder=\"Search\"\n            className=\"form-control\"\n            value={search}\n            onChange={this.changeHandler}\n          />\n\n          <select\n            name=\"filteredTodos\"\n            value={filteredTodos}\n            onChange={this.changeHandler}\n            className=\"form-control\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"active\">active</option>\n          </select>\n          <ul className=\"TodoList__list\">\n            {todosToShow\n              ? (todosToShow.map(todo => (\n                <Todo\n                  todo={todo}\n                  onButtonClick={onButtonClick}\n                  isSelectedUser={selectedUserId === todo.userId}\n                  key={todo.id}\n                />\n              )))\n              : <p>No tasks</p>}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    userId: PropTypes.number,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n  onButtonClick: PropTypes.func.isRequired,\n};\n","export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then((result) => {\n    if (!result.ok) {\n      throw new Error(`${result.status} - ${result.statusText}`);\n    }\n\n    return result.json();\n  })\n  .then(result => result.data);\n\nexport const getTodos = () => request('/todos');\nexport const getUser = id => request(`/users/${id}`);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\nexport class CurrentUser extends React.PureComponent {\n  state = {\n    user: {},\n  }\n\n  componentDidMount() {\n    this.updateUser(this.props.userId);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.user && prevState.user.id === this.props.userId) {\n      return;\n    }\n\n    this.updateUser(this.props.userId);\n  }\n\n  updateUser(newUserId) {\n    getUser(newUserId)\n      .then((newUser) => {\n        this.setState({\n          user: newUser,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          user: {},\n        });\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { onButtonClick } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        {user\n          ? (\n            <>\n              <h2 className=\"CurrentUser__title\">\n                <span>\n                  {`Selected user: ${user.id}`}\n                </span>\n              </h2>\n\n              <h3 className=\"CurrentUser__name\">{user.name}</h3>\n              <p className=\"CurrentUser__email\">{user.email}</p>\n              <p className=\"CurrentUser__phone\">{user.phone}</p>\n\n              <button\n                type=\"button\"\n                onClick={() => {\n                  onButtonClick();\n                }}\n                className=\"btn btn-danger\"\n              >\n                X\n              </button>\n            </>\n          )\n          : (\n            <p>User is not found</p>\n          )}\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  onButtonClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({\n          todos,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          todos: null,\n        });\n      });\n  }\n\n  selectUser = (selectedUserId) => {\n    this.setState({\n      selectedUserId,\n    });\n  }\n\n  clearSelectedUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedUserId={selectedUserId}\n            onButtonClick={this.selectUser}\n            onInputChange={this.filterTodos}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onButtonClick={this.clearSelectedUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}